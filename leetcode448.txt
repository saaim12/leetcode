
   class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        int i = 1;
        while (i <= nums.length) {
            int correctIndex = nums[i - 1]; // Adjust index to start from 0
            if (nums[i - 1] != nums[correctIndex - 1]) { // Adjust index to start from 0
                swap(nums, i - 1, correctIndex - 1); // Adjust index to start from 0
            } else {
                i++;
            }
        }

        List<Integer> disappearedNumbers = new ArrayList<>();
        int j = 1;
        while (j <= nums.length) {
            if (nums[j - 1] != j) { // Adjust index to start from 0
                disappearedNumbers.add(j);
            }
            j++;
        }
        return disappearedNumbers;
    }

    public static void swap(int[] arr, int index1, int index2) {
        int temp = arr[index1];
        arr[index1] = arr[index2];
        arr[index2] = temp;
    }
}
